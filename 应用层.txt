# Linux

1.应用层

1.1 应用层：负责应用程序之间的数据沟通
	* 自定制协议
	* 知名协议HTTP -> 给程序员一定的自定制空间

1.2 网址：URL - 统一资源定位符
	* urlencode(编码)：将特殊字符串的每一个字节转换为16进制数字的字符串“+  -> %2b”，且在两个字符前增加%用于标识，表示这个字节经过了转义
	* urldecode(解码)：在查询字符串时遇到%，将紧跟其后的两个字符转换为数字，第一个数字乘以16 / 左移4位 加上第二个数字

1.3 将网址输入浏览器回车后，将向服务器发起请求
	* http协议是一个应用层协议，在传输层使用的是tcp协议；
	* 浏览器将搭建一个tcp客户端，组织http请求数据，将数据发送到服务端；
	* 服务端收到请求，进行解析处理，最终组织响应，将结果返回给浏览器；
	* 客户端（浏览器）收到响应，对响应进行解析，最终将html数据渲染成为页面。

2.HTTP协议：超文本传输协议
	*  HTTP协议格式：http协议如何组织/解析数据

		* 三大部分：首行、头部、正文

2.1 首行 2.1.1 请求首行
	* 三要素（请求方法、URL、协议版本），且三要素以空格间隔，并以 \r \n作为结尾

	* 请求方法（多种）：GET（向服务器请求html数据） / POST（向服务端提交数据） / PUT / DELETE / OPTION / PATCH

		* GET：没有正文的，提交数据通过url中的查询字符串完成；
		* POST：提交表单数据到正文中，正文没有数据限制；
            
	* URL（统一资源定位符）：长度是有限制的1k， 4k

	* 协议：HTTP/1.1    （ 0.9 -> 1.0 -> 1.1（连接为长连接）只能客户端给服务端）-> 2 ）

2.1.2 响应首行
	* 以空格进行间隔包含三大要素：协议版本、响应状态码、状态码描述  以 \r \n 作为结尾

	*  响应状态码：五大类：1xx / 2xx / 3xx / 4xx / 5xx

		* 1xx：描述信息；2xx：请求正确处理；3xx：重定向；4xx：客户端错误；5xx：服务端错误
		* 200/ 301/ 302/ 404/ 500/ 502（网关、代理服务器无响应)
		* 
		* 状态码301、302的区别：301永久（资源、网页等被永久转移到其他url），302临时

2.2 头部
        头部中都是一个个key（键值对）: val形式的键值对，并且键值对之间以 \r \n 作为间隔（每一键值对都以 \r \n 作为结尾) key：val \r \n            


http常见的header：
	* Content-Type：正文数据类型(text/html等)；
	* Content-Length：Body的长度；
	* Host：客户端告知服务器, 所请求的资源是在哪个主机的哪个端口上;
	* User-Agent：声明用户的操作系统和浏览器版本信息;
	* Referer：当前页面是从哪个页面跳转过来的;
	* Location：搭配3xx状态码使用, 告诉客户端接下来要去哪里访问;
	* Cookie：用于在客户端存储少量信息，通常用于实现会话(session)的功能;

【cookie与session的区别】
	* cookie： 服务端通过set_cookie返回的信息，作为cookie保存在客户端，下次客户端访问服务端的时候通过cookie字段将信息发送给服务端；
	* session：会话，由服务器为每一个客户端建立，保存客户端的信息，通过set_cookie将sessionid返回给客户端

【http与https的区别】
	* http使用80端口作为默认端口；https使用443端口
	* https：在http协议的基础上进行了一层ssl加密


	* 数据加密方式：对称加密/非对称加密

【ssl库非对称加密进行协商的过程】

为什么加密是必要的？

【具体】
	1. 使用对称加密（一直使用同一种加密方式），很容易被破解，因此使用非对称加密；
	2. 非对称加密，解密性能比较低，因此数据通信不能全部使用；
	3. 双方首先协商对称加密算法，防止协商过程被破解，因此对协商对称加密算法的过程进行非对称加密；
	4. 但存在中间私钥被劫持的可能，因此采用签名认证的方式；
	5. 使用签名证书，证明自己的身份，但证书有可能造假/被劫持，因此需要权威机构认证；
	6. 服务端首先生成一对密钥（公钥+私钥），带着公钥去权威机构生成签名证书（公钥、公司、机构）；
	7. 通信的时候先将证书发送给客户端，客户端进行证书解析，去权威机构进行公司的身份认证，通过才能通信；
	8. 通过身份验证后，使用私钥加密整个对称加密算法协商过程。
